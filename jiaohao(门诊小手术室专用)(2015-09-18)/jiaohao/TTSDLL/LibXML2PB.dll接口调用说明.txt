1、函数声明：
Function long XmlGetNodeValue(blob xmlinput,string xmlpath,string defaultValue,ref string xmlvaue,long xmllen)  Library "LibXML2PB.dll" Alias for "XmlGetNodeValue;Ansi"
Function long XmlGetNodeList(blob xmlinput,string xmlpath,ref long nodesHandle)  Library "LibXML2PB.dll" Alias for "XmlGetNodeList;Ansi"
Function long XmlGetChildNodeValue(long nodeshandle,long index,string lpNodeName,string defaultValue,ref string OutStr,long outStrLen)  Library "LibXML2PB.dll" Alias for "XmlGetChildNodeValue;Ansi"
Function long XmlFreeNodeList(long nodeHandle)  Library "LibXML2PB.dll" Alias for "XmlFreeNodeList;Ansi"

2、解析单个节点示例
String ls_Xml
String ls_Path
String ls_Value
long   ll_return
long   ll_Length
blob   lb_blob

ls_Xml = Trim(mle_input.text)
ls_Path = Trim(mle_path.text)
ll_Length = 1024                      //必须先分配足够的空间
ls_Value = space(ll_Length)

lb_blob = Blob(ls_xml,EncodingUTF8!)  //需要讲XML文件转换成utf-8的格式

//返回值为1表示成功;为0表示传入的xmlpath不存在,此时将返回传入的默认值

ll_return = XmlGetNodeValue(lb_blob,'//GUAHAOYJS_OUT/GUAHAOYJS/FEIYONGMXZFXX','不存在',ref ls_value,ll_Length)

3、多个节点的解析
String ls_Xml
String ls_Path
String ls_Value
long   ll_return
long   ll_Length
blob   lb_blob
long   ll_NodesHandle
long   ll_I

ls_Xml = Trim(mle_input.text)
ls_Path = Trim(mle_path.text)
ll_Length = 1024
ls_Value = space(ll_Length)

lb_blob = Blob(ls_xml,EncodingUTF8!)

//ll_return 小于0为错误
ll_return = XmlGetNodeList(lb_blob,ls_Path,ref ll_NodesHandle)

//序号从0开始
for ll_i = 0 to ll_Return - 1
   XmlGetChildNodeValue(ll_NodesHandle,ll_i,"CHUFANGXH",'不存在',ref ls_Value,ll_Length)
   XmlGetChildNodeValue(ll_NodesHandle,ll_i,"ZIFEIJE",'不存在',ref ls_Value,ll_Length)
   //如果要查询的节点不存在，则返回传入的默认值，即第四个参数
   XmlGetChildNodeValue(ll_NodesHandle,ll_i,"ZIFEIJE1",'不存在',ref ls_Value,ll_Length)
Next

//解析完成后需调用下面的函数释放资源
XmlFreeNodeList(ll_NodesHandle)



